<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(135deg, #ff9a9e, #fad0c4);
        }

        .container {
            text-align: center;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 350px;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            margin: 20px auto;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: #f9f9f9;
            border: 2px solid #333;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }

        .cell:hover {
            background-color: #e0f7fa;
            transform: scale(1.05);
        }

        .cell.disabled {
            pointer-events: none;
            background-color: #ddd;
            color: #999;
        }

        .message {
            margin-top: 20px;
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
        }

        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            border: none;
            background: linear-gradient(135deg, #007BFF, #0056b3);
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: background 0.3s, transform 0.2s;
        }

        button:hover {
            background: linear-gradient(135deg, #0056b3, #003d80);
            transform: scale(1.05);
        }

        button:active {
            transform: scale(0.95);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Tic-Tac-Toe</h1>
        <div class="board" id="board"></div>
        <div class="message" id="message"></div>
        <button id="reset">Reset</button>
    </div>

    <script>
        const board = document.getElementById('board');
        const message = document.getElementById('message');
        const resetButton = document.getElementById('reset');

        let currentPlayer = 'X';
        let gameActive = true;
        let gameState = ["", "", "", "", "", "", "", "", ""];

        const winningConditions = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function createBoard() {
            board.innerHTML = '';
            gameState.forEach((cell, index) => {
                const cellElement = document.createElement('div');
                cellElement.classList.add('cell');
                cellElement.dataset.index = index;
                cellElement.textContent = cell;
                cellElement.addEventListener('click', handleCellClick);
                board.appendChild(cellElement);
            });
        }

        function handleCellClick(event) {
            const cell = event.target;
            const index = cell.dataset.index;

            if (gameState[index] !== "" || !gameActive) {
                return;
            }

            gameState[index] = currentPlayer;
            cell.textContent = currentPlayer;
            cell.classList.add('disabled');

            if (checkWin()) {
                message.textContent = `${currentPlayer} wins!`;
                gameActive = false;
                return;
            }

            if (gameState.every(cell => cell !== "")) {
                message.textContent = "It's a draw!";
                gameActive = false;
                return;
            }

            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            message.textContent = `It's ${currentPlayer}'s turn.`;
        }

        function checkWin() {
            return winningConditions.some(condition => {
                return condition.every(index => gameState[index] === currentPlayer);
            });
        }

        function resetGame() {
            currentPlayer = 'X';
            gameActive = true;
            gameState = ["", "", "", "", "", "", "", "", ""];
            message.textContent = `It's ${currentPlayer}'s turn.`;
            createBoard();
        }

        resetButton.addEventListener('click', resetGame);

        createBoard();
        message.textContent = `It's ${currentPlayer}'s turn.`;
    </script>
</body>
</html>
